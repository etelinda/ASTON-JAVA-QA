public class Animals {
private static int animalCounter = 0;
    private static int catCounter = 0;
    private static int dogCounter = 0;

public void run(double length) {
       System.out.println("Animal is running over " + length + " meters");
     }
public void swim(double length) {
       System.out.println("Animal is swimming over " + length + " meters");
    }
static void printCounts() {
        System.out.printf("Создано объектов класса Animals: %d\n", animalCounter);
        System.out.printf("Создано объектов класса Cat: %d\n", catCounter);
        System.out.printf("Создано объектов класса Dog: %d\n", dogCounter);
    }
}

public class Dog extends Animals {
    @Override
    public void run(double length) {
        if (length > 200) {
            throw new IllegalArgumentException("Dogs can't run mor than 500 meters!");
        } else {
            super.run(length);
            dogCounter++;
            System.out.println("Dog is running over than " + length + " meters!");
        }
    }
}

public class Dog extends Animals {
    @Override
    public void swim(double length) {
        if (length > 10) {
            throw new IllegalArgumentException("Dogs can't swim more than 10 meters!");
        } else {
            super.swim(length);
        }
    }

    @Override
    public void run(double length) {
        if (length > 500) {
            throw new IllegalArgumentException("Dogs can't run more than 500 meters!");
        } else {
            super.run(length);
            dogCounter++;
            System.out.println("Dog is running over " + length + " meters!");
        }
    }

  public class Cat extends Animals {
    @Override
    public void swim(double length) {
        throw new UnsupportedOperationException("Cats can't swim!");
}
    @Override
    public void run(double length) {
        if (length > 500) {
            throw new IllegalArgumentException("Cats can't run more than 200 meters!");
        } else {
            super.run(length);
            catCounter++;
            System.out.println("Cat is running over " + length + " meters!");
        }
    }
@Override
public void eatFood(int gram) {
      if (gram > 0) {
          System.out.printf("Cat ate %d gram of food);
      } else {
public void eatFood(int gram) {
          throw new IllegalArgumentException("Grams should be a positive number!");
      }
}
// satiety это  сытость
public boolean isSatiety() {
    return satiety;
  }
public class Main {
    public static void main(String[] args) {
        Cat[] cats = new Cat[10];
        for (int i = 0; i < cats.length; i++) {
            cats[i] = new Cat();
        }
               for (Cat cat : cats) {
            cat.eatFood(5);
        }
        int countSatiety = 0;
        for (Cat cat : cats) {
            if (cat.isSatiety()) {
                countSatiety++;
            }
        }
        System.out.println("Number of well-fed cats" + countSatiety);
    }
}
}
}
